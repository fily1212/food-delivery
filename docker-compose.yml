version: "3.9"

networks:
  fooddelivery-net:
    driver: bridge

volumes:
  pgdata:
  rabbitmq_data:

services:
  postgres:
    image: postgres:15
    container_name: pg-orderdb
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - fooddelivery-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    networks:
      - fooddelivery-net

  accounting-service:
    build: ./accounting-service
    image: fooddelivery/accounting-service:latest
    environment:
      SERVER_PORT: 8092
    depends_on:
      rabbitmq:
        condition: service_started
    networks:
      - fooddelivery-net

  restaurant-service:
    build: ./restaurant-service
    image: fooddelivery/restaurant-service:latest
    environment:
      SERVER_PORT: 8091
    depends_on:
      rabbitmq:
        condition: service_started
    networks:
      - fooddelivery-net

  kitchen-service:
    build: ./kitchen-service
    image: fooddelivery/kitchen-service:latest
    environment:
      SERVER_PORT: 8093
      SPRING_DATASOURCE_URL: jdbc:h2:mem:kitchen_db;DB_CLOSE_DELAY=-1
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: ""
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
    depends_on:
      rabbitmq:
        condition: service_started
    networks:
      - fooddelivery-net

  order-service:
    build: ./order-service
    image: fooddelivery/order-service:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      APP_RABBITMQ_EXCHANGE: fooddelivery.exchange
      APP_RABBITMQ_QUEUE_READY_TICKET: order.ready-ticket
      APP_RABBITMQ_ROUTINGKEY_PREPARE_TICKET: rk.order.prepare-ticket
      APP_RABBITMQ_ROUTINGKEY_READY_TICKET: rk.kitchen.ready-ticket

      SERVICES_RESTAURANT_URL: http://restaurant-service:8091
      SERVICES_ACCOUNTING_URL: http://accounting-service:8092

    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - fooddelivery-net
    ports:
      - "8090:8090"

  frontend:
    build: ./frontend          # o image: frontend:local se hai gi√† buildato
    image: fooddelivery/frontend:latest
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      INTERNAL_API_BASE: "http://order-service:8090"
    depends_on:
      - order-service
    networks:
      - fooddelivery-net
