apiVersion: apps/v1
kind: Deployment
metadata:
  name: kitchen-service
  namespace: fooddelivery
  labels:
    app: kitchen-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kitchen-service
  template:
    metadata:
      labels:
        app: kitchen-service
    spec:
      containers:
        - name: kitchen-service
          image: fooddelivery/kitchen-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8093
          env:
            - name: SERVER_PORT
              value: "8093"
            - name: SPRING_DATASOURCE_URL # H2 in memoria, non cambia
              value: "jdbc:h2:mem:kitchen_db;DB_CLOSE_DELAY=-1"
            - name: SPRING_DATASOURCE_USERNAME
              value: "sa"
            - name: SPRING_DATASOURCE_PASSWORD
              value: ""
            - name: SPRING_RABBITMQ_HOST
              value: "rabbitmq" # Nome del Service Kubernetes di RabbitMQ
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS
            - name: APP_RABBITMQ_EXCHANGE
              value: "fooddelivery.exchange"
            - name: APP_RABBITMQ_QUEUE_PREPARE_TICKET
              value: "kitchen.prepare-ticket"
            - name: APP_RABBITMQ_ROUTINGKEY_PREPARE_TICKET
              value: "rk.order.prepare-ticket"
            - name: APP_RABBITMQ_ROUTINGKEY_READY_TICKET
              value: "rk.kitchen.ready-ticket"

